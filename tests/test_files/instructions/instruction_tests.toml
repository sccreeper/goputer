# Surface level tests for instructions.

tests=[
{name="move",is_file=false, text="""
#label start
mov $1 r01
""", check_value=[1], check_reg="r01"},
{name="load_store", is_file=false,text="""
#def x 1

#label start

lda @x
incr r00
sta @x
lda @x
mov d0 r01
""",check_reg="r00", check_value=[1]},

{name="push_pop_immediate",is_file=false, check_reg="r01", check_value=[1],text="""
#label start

push $1
pop r01
"""},

{name="add", is_file=false, check_reg="a0", check_value=[2], text="""
#label start

mov $1 r00
add r00 $1
"""},

{name="multiply", is_file=false, check_reg="a0", check_value=[4], text="""
#label start

mov $2 r00
mul r00 r00
"""},

{name="divide", is_file=false, check_reg="a0", check_value=[2], text="""
#label start

mov $10 r00
div r00 $5
"""},
{name="subtract", is_file=false, check_reg="a0", check_value=[0], text="""
#label start

mov $1 r00
mov $1 r01
sub r01 r00
"""},
{name="increment", is_file=false, check_reg="r00", check_value=[1], text="""
#label start

incr r00
"""},
{name="decrement", is_file=false, check_reg="r00", check_value=[1], text="""
#label start

mov $2 r00
decr r00
"""},
{name="square_root", is_file=false, check_reg="a0", check_value=[2], text="""
#label start

mov $4 r00
sqrt r00
"""},
{name="power", is_file=false, check_reg="a0", check_value=[4], text="""
#label start

mov $2 r00
pow r00 r00
"""},
{name="clear", is_file=false, check_reg="r00", check_value=[0], text="""
#label start

incr r00
clr r00
"""},
{name="sl", is_file=false, check_reg="a0", check_value=[8], text="""
#label start

mov $4 r00

incr r01

sl r00 r01

"""},
{name="sr", is_file=false, check_reg="a0", check_value=[2], text="""
#label start

mov $4 r00

incr r01

sr r00 r01

"""},
{name="inv", is_file=false, check_reg="a0", check_value=[4294967294], text="""
#label start

incr r00
inv r00

"""},
{name="or", is_file=false, check_reg="a0", check_value=[1020], text="""
#label start

mov $500 r00
mov $1000 r01

or r00 r01
"""},
{name="xor", is_file=false, check_reg="a0", check_value=[540], text="""
#label start

mov $1000 r00
mov $500 r01

xor r00 r01
"""},
{name="and", is_file=false, check_reg="a0", check_value=[480], text="""
#label start

mov $1000 r00
mov $500 r01

and r00 r01
"""},
{name="eq", is_file=false, check_reg="a0", check_value=[4294967295], text="""
#label start

mov $1000 r00
mov $1000 r01

eq r00 r01
"""},
{name="neq", is_file=false, check_reg="a0", check_value=[0], text="""
#label start

mov $1000 r00
mov $1000 r01

neq r00 r01
"""},
{name="gt", is_file=false, check_reg="a0", check_value=[4294967295], text="""
#label start

mov $1001 r00
mov $1000 r01

gt r00 r01
"""},
{name="lt", is_file=false, check_reg="a0", check_value=[0], text="""
#label start

mov $1001 r00
mov $1000 r01

lt r00 r01
"""},
{name="modulo", is_file=false, check_reg="a0", check_value=[1], text="""
#label start

mov $5 r00
mov $2 r01

mod r00 r01

"""},
{name="mov_imm", is_file=false, check_reg="r00", check_value=[64], text="""

#label start

mov $64 r00

"""},
{name="push_pop_register", is_file=false, check_reg="r00", check_value=[64], text="""

#label start

mov $64 r00

push r00
clr r00
pop r00

"""},
{name="random", is_file=false, check_reg="a0", check_value=[0, 50], text="""
#label start

mov $50 r01

rand r00 r01

"""}
]